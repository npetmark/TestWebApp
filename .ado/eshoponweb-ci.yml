#NAME THE PIPELINE SAME AS FILE (WITHOUT ".yml")
# trigger:
# - main
parameters:
  - name: CustomerA                  # Case 1; Boolean type for multiple selection"
    displayName: Customer A
    type: boolean
    default: true

  - name: CustomerB
    displayName: Customer B
    type: boolean
    default: true

  - name: CustomerC
    displayName: Customer C
    type: boolean
    default: false

resources:
  repositories:
    - repository: self
      trigger: none

stages:
- stage: Build
  displayName: Build .Net Core Solution
  jobs:
    - ${{ each parameter in parameters }}:
      - ${{ if eq(parameter.Value, true)}}:
        - job: '${{ parameter.Key }}'
          pool:
            vmImage: ubuntu-latest
          steps:
          - task: DotNetCoreCLI@2
            displayName: Restore
            inputs:
              command: 'restore'
              projects: '**/*.sln'
              feedsToUse: 'select'

          - task: DotNetCoreCLI@2
            displayName: Build
            inputs:
              command: 'build'
              projects: '**/*.sln'
          
          - task: DotNetCoreCLI@2
            displayName: Test
            inputs:
              command: 'test'
              projects: 'tests/UnitTests/*.csproj'
          
          - task: DotNetCoreCLI@2
            displayName: Publish
            inputs:
              command: 'publish'
              publishWebProjects: true
              arguments: '-o $(Build.ArtifactStagingDirectory)'
          
          - task: PublishBuildArtifacts@1
            displayName: Publish Artifacts
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: '${{ parameter.Key }}'
              publishLocation: 'Container'
    
    # - task: PublishBuildArtifacts@1
    #   displayName: Publish Artifacts ADO - Bicep
    #   inputs:
    #     PathtoPublish: '$(Build.SourcesDirectory)/.azure/bicep/webapp.bicep'
    #     ArtifactName: 'Bicep'
    #     publishLocation: 'Container'

- stage: Deploy
  dependsOn: Build
  displayName: Deploy to an Azure Web App
  jobs:
    - ${{ each parameter in parameters }}:
      - ${{ if eq(parameter.Value, true)}}:
        - deployment: ${{ parameter.Key}}
          environment: approvals

          pool:
            vmImage: 'windows-2019'

          strategy:
            runOnce:
              deploy:
                steps:
                - task: DownloadPipelineArtifact@2
                  inputs:
                    buildType: 'current'
                    artifactName: '${{ parameter.Key }}'
                    itemPattern: '${{ parameter.Key }}/*.zip'
                    targetPath: '$(Pipeline.Workspace)'
                    
                - task: AzureRmWebAppDeployment@4
                  inputs:
                    ConnectionType: 'AzureRM'
                    azureSubscription: 'azure-connect'
                    appType: 'webApp'
                    WebAppName: '${{ parameter.Key }}'
                    deployToSlotOrASE: true
                    ResourceGroupName: 'az400m05l11-RG'
                    SlotName: 'production'
                    packageForLinux: '$(Build.ArtifactStagingDirectory)/**/Web.zip'
                    enableCustomDeployment: true
                    DeploymentType: 'webDeploy'